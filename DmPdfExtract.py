import os.path
import random
import string
import sys
import requests
import argparse
import datetime
import urllib3
import re
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
global_session = None


def get_currentTime():
    return "[" + datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "] "


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--username", help="Username for a daily mail account.", type=str)
    parser.add_argument("--password", help="Password for the daily mail account.", type=str)
    parser.add_argument("--start-index", help="Start index key.", type=int)
    parser.add_argument("--doc-output", help="Path to save downloaded documents.", type=str)
    parser.add_argument("--log", help="Path to the LOG file", type=str)
    return parser.parse_args()


def create_session(username, password):
    sess = requests.Session()
    sess_resp = sess.post("https://dailymail.army.lk/index.php",
                          data={'username': username, 'password': password, 'userlogin': '1'}, headers={
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36'},
                          verify=False)
    if "<h1>Log on</h1>" in sess_resp.text or "Access Denied" in sess_resp.text:
        return False
    return sess


def parse_documents(session, index):
    while True:
        form_data = {
            'inpInitiatedActId': str(index),
            'DashBd': 'Dsh'
        }

        body, head = urllib3.encode_multipart_formdata(form_data)
        doc_resp = session.post("https://dailymail.army.lk/index.php", data=body, headers={
            'Content-Type': head,
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36'},
                                verify=False)
        doc_bs = BeautifulSoup(doc_resp.text, "html.parser")
        if doc_bs.find("iframe"):
            print(get_currentTime() + str(index) + " : Downloading : ", end='')
            yield "https://dailymail.army.lk/" + (doc_bs.find_all('iframe')[0]['src']).strip()
        index += 1


def download_document(session, url, doc_path):
    with session.get(url, stream=True, verify=False) as dm_req:
        with open(doc_path + "\\" + os.path.basename(url), 'wb') as doc_out:
            for data in dm_req.iter_content(chunk_size=4096):
                doc_out.write(data)


if __name__ == "__main__":
    arguments = parse_args()
    print(get_currentTime() + "Attempting to login using the provided username and password...", end='')
    dm_session = create_session(arguments.username, arguments.password)
    if not dm_session:
        print(" Login Failed!", end='\n')
        exit()
    print(" Login Success!", end='\n')

    for i in parse_documents(dm_session, arguments.start_index):
        print(i, end='\n')
        download_document(dm_session, i, arguments.doc_output)

